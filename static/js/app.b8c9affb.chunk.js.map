{"version":3,"sources":["src/pokemonCard.js","src/pokemonDescription.js","App.js"],"names":["PokemonCard","props","retrunClass","pokeType","styles","typepsychic","typebug","typenormal","typesteel","typeground","typeflying","typefairy","typewater","typepoison","typerock","typefighting","typedark","typeice","typefire","typelctric","typegrass","View","style","cardstyle","Image","cardstyleImage","source","uri","image","textDecoration","to","id","Text","pokemonName","name","typeRow","types","map","type","i","key","pokemontypelook","onPress","pressType","pokeTypeText","StyleSheet","create","height","width","margin","backgroundColor","alignItems","justifyContent","borderRadius","borderWidth","borderColor","textTransform","color","fontSize","textAlign","linkUnderline","display","flexDirection","PokemonDescription","description","text","descriptionInner","descriptionInnerText","categoryText","categoryTextValue","weight","abilities","pokemonType","marginTop","marginBottom","paddingTop","fontWeight","marginLeft","url","App","state","data","fetchedData","tern","newPokemonList","filter","pokemon","some","nestedType","setState","newPokemon","item","toLowerCase","indexOf","returnBasicData","componentDidMount","a","async","fetch","responce","json","dataToState","Array","results","length","url2","pokemonData","pokemonDataJson","sprites","other","front_default","objectToInsert","defense","stats","base_stat","ability","push","this","handler","body","header","onClick","TextInput","input","onChangeText","mainWindow","exact","path","cardHolder","render","match","params","find","el","Number","Component","padding","flex","flexWrap"],"mappings":"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","file":"static/js/app.b8c9affb.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { View, Text, StyleSheet, Image, } from 'react-native'\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nexport const PokemonCard = (props) => {\r\n    function retrunClass(pokeType) {\r\n        switch (pokeType) {\r\n            case 'psychic': return styles.typepsychic;\r\n            case 'bug': return styles.typebug;\r\n            case 'normal': return styles.typenormal;\r\n            case 'steel': return styles.typesteel;\r\n            case 'ground': return styles.typeground;\r\n            case 'flying': return styles.typeflying;\r\n            case 'fairy': return styles.typefairy;\r\n            case 'water': return styles.typewater;\r\n            case 'poison': return styles.typepoison;\r\n            case 'rock': return styles.typerock;\r\n            case 'fighting': return styles.typefighting;\r\n            case 'dark': return styles.typedark;\r\n            case 'ice': return styles.typeice;\r\n            case 'fire': return styles.typefire;\r\n            case 'elctric': return styles.typelctric;\r\n            case 'grass': return styles.typegrass;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <View style={styles.cardstyle}>\r\n            <View>\r\n                <Image style={styles.cardstyleImage}\r\n                    source={{ uri: props.image }} />\r\n            </View>\r\n            <Link style={{ textDecoration: 'none' }} to={'/pokemonDescription/' + props.id}>\r\n                <Text style={styles.pokemonName}>{props.name}</Text>\r\n            </Link>\r\n            <View style={styles.typeRow}  >\r\n                {props.types && props.types.map((type, i) => (\r\n                    <View  key={i}>\r\n                        <View style={[retrunClass(type.name), styles.pokemontypelook]}>< Text\r\n                            onPress={() => props.pressType(type.name)}\r\n                            style={styles.pokeTypeText} key={i}>{type.name}</Text></View>\r\n                    </View>\r\n                ))}\r\n            </View>\r\n        </View>\r\n\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    cardstyleImage: {\r\n        height: 150,\r\n        width: 150\r\n    }\r\n    ,\r\n    cardstyle: {\r\n        margin: 10,\r\n        height: 300,\r\n        width: 300,\r\n        backgroundColor: '#3c4d41',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: 10,\r\n        borderWidth: 1,\r\n        borderColor: '#6d8a76',\r\n        textTransform: 'capitalize'\r\n    },\r\n    pokemonName: {\r\n        color: 'white',\r\n        fontSize: 30,\r\n\r\n    },\r\n    pokemontypelook: {\r\n        width: 60,\r\n        height: 20,\r\n        borderRadius: 2,\r\n        margin: 5\r\n\r\n    },\r\n    typepsychic: {\r\n        backgroundColor: '#F95587',\r\n    },\r\n    typebug: {\r\n        backgroundColor: '#A6B91A',\r\n    },\r\n    typenormal: {\r\n        backgroundColor: '#A8A77A',\r\n    }, typesteel: {\r\n        backgroundColor: '#B7B7CE',\r\n    }, typeground: {\r\n        backgroundColor: '#E2BF65',\r\n    }, typeflying: {\r\n        backgroundColor: '#A98FF3',\r\n    }, typefairy: {\r\n        backgroundColor: '#D685AD',\r\n    }, typewater: {\r\n        backgroundColor: '#6390F0',\r\n    }, typepoison: {\r\n        backgroundColor: '#A33EA1',\r\n    }, typerock: {\r\n        backgroundColor: '#B6A136',\r\n    }, typefighting: {\r\n        backgroundColor: '#C22E28',\r\n    }, typedark: {\r\n        backgroundColor: '#705746',\r\n    }, typeice: {\r\n        backgroundColor: '#96D9D6',\r\n    }, typefire: {\r\n        backgroundColor: '#EE8130',\r\n    }, typelctric: {\r\n        backgroundColor: '#F7D02C',\r\n\r\n    }, typegrass: {\r\n        backgroundColor: '#7AC74C',\r\n    },\r\n    pokeTypeText: {\r\n        textAlign: \"center\",\r\n    },\r\n    linkUnderline: {\r\n        backgroundColor: 'red'\r\n    },\r\n    typeRow: {\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n}\r\n\r\n});\r\n\r\n","import React, { Component } from 'react'\r\nimport { View, Text, StyleSheet, Image, } from 'react-native'\r\nimport { NativeRouter, Route, Link, } from \"react-router-native\";\r\nexport const PokemonDescription = (props) => {\r\n    function retrunClass(pokeType) {\r\n        switch (pokeType) {\r\n            case 'psychic': return styles.typepsychic;\r\n            case 'bug': return styles.typebug;\r\n            case 'normal': return styles.typenormal;\r\n            case 'steel': return styles.typesteel;\r\n            case 'ground': return styles.typeground;\r\n            case 'flying': return styles.typeflying;\r\n            case 'fairy': return styles.typefairy;\r\n            case 'water': return styles.typewater;\r\n            case 'poison': return styles.typepoison;\r\n            case 'rock': return styles.typerock;\r\n            case 'fighting': return styles.typefighting;\r\n            case 'dark': return styles.typedark;\r\n            case 'ice': return styles.typeice;\r\n            case 'fire': return styles.typefire;\r\n            case 'elctric': return styles.typelctric;\r\n            case 'grass': return styles.typegrass;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View style={styles.description}>\r\n            <Text style={styles.text}>{props.name} <Text style={{ color: '#616161', fontSize: 25 }}>№{props.id}</Text> </Text>\r\n            <View style={styles.descriptionInner}>\r\n                <View style={{ flexDirection: 'row', justifyContent: 'flex-start' }}>\r\n                    <Image style={styles.image}\r\n                        source={{ uri: props.image }} />\r\n                </View>\r\n                <View style={styles.descriptionInnerText}>\r\n                    <View style={styles.typeRow}>\r\n                    <Text style={styles.categoryText}>Weight:</Text>\r\n                        <Text style={styles.categoryTextValue}>{props.weight} </Text>\r\n                    </View>\r\n                    <View style={styles.typeRow}>\r\n                    <Text style={styles.categoryText}>Abilities:</Text>\r\n                        <Text style={styles.categoryTextValue}>{props.abilities}</Text>\r\n                    </View>\r\n                    <View style={styles.typeRow}>\r\n                    <Text style={styles.categoryText}>Height:</Text>\r\n                        <Text style={styles.categoryTextValue}>{props.height}</Text>\r\n                    </View>\r\n\r\n                    <View style={styles.typeRow}>\r\n                        <Text style={styles.categoryText}>Type:</Text>\r\n                        {\r\n                            props.types && props.types.map((type, i) => (\r\n                                <View style={styles.pokemonType} key={i}>\r\n                                    <View\r\n                                        style={[retrunClass(type.name), styles.pokemontypelook]}>\r\n                                        < Text style={styles.pokeTypeText}>                                      {type.name}\r\n                                        </Text>\r\n                                    </View>\r\n                                </View>))\r\n                        }\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    description: {\r\n        marginTop: 60,\r\n        marginBottom: 60,\r\n        height: 600,\r\n        width: 800,\r\n        backgroundColor: '#44F1E6',\r\n        borderRadius: 10,\r\n\r\n    },\r\n    descriptionInner: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        paddingTop: 40,\r\n    },\r\n    text: {\r\n        textAlign: \"center\",\r\n        textTransform: 'capitalize',\r\n        fontSize: 40,\r\n        fontWeight: '500',\r\n        marginTop: 20,\r\n\r\n    },\r\n    image: {\r\n        width: 400,\r\n        height: 400\r\n    },\r\n    descriptionInnerText: {\r\n        width: '50%',\r\n        color: 'red',\r\n        textTransform: 'capitalize',\r\n    },\r\n    categoryText: {\r\n        color: 'white',\r\n        fontSize: 20,\r\n        fontWeight: '400',\r\n\r\n    },\r\n    categoryTextValue: {\r\n        color: 'black',\r\n        fontSize: 25,\r\n        marginLeft: 15\r\n    },\r\n    pokemontypelook: {\r\n        width: 100,\r\n        borderRadius: 2,\r\n        margin: 10,\r\n    },\r\n    typepsychic: {\r\n        backgroundColor: '#F95587',\r\n    },\r\n    typebug: {\r\n        backgroundColor: '#A6B91A',\r\n    },\r\n    typenormal: {\r\n        backgroundColor: '#A8A77A',\r\n    }, typesteel: {\r\n        backgroundColor: '#B7B7CE',\r\n    }, typeground: {\r\n        backgroundColor: '#E2BF65',\r\n    }, typeflying: {\r\n        backgroundColor: '#A98FF3',\r\n    }, typefairy: {\r\n        backgroundColor: '#D685AD',\r\n    }, typewater: {\r\n        backgroundColor: '#6390F0',\r\n    }, typepoison: {\r\n        backgroundColor: '#A33EA1',\r\n    }, typerock: {\r\n        backgroundColor: '#B6A136',\r\n    }, typefighting: {\r\n        backgroundColor: '#C22E28',\r\n    }, typedark: {\r\n        backgroundColor: '#705746',\r\n    }, typeice: {\r\n        backgroundColor: '#96D9D6',\r\n    }, typefire: {\r\n        backgroundColor: '#EE8130',\r\n    }, typelctric: {\r\n        backgroundColor: '#F7D02C',\r\n    }, typegrass: {\r\n        backgroundColor: '#7AC74C',\r\n    },\r\n    pokeTypeText: {\r\n        textAlign: \"center\",\r\n  \r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: 40,\r\n    },\r\n    typeRow: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        margin: 20\r\n}\r\n})","\nimport React, { Component } from 'react';\nimport { StyleSheet, Text, View, TextInput } from 'react-native';\nimport { PokemonCard } from './src/pokemonCard.js'\nimport { PokemonDescription } from './src/pokemonDescription.js'\n//import { BrowserRouter as Router, Route, Link } from \"react-router-native\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n\nconst url = 'https://pokeapi.co/api/v2/pokemon?limit=20&offset=200'\nclass App extends Component {\n    state = {\r\n        data: [],\r\n        fetchedData: [],\r\n        tern: '',\r\n    }\n    pressType = (type) => {\r\n        let newPokemonList = this.state.fetchedData.filter(\r\n            function (pokemon) {\r\n                return pokemon.types.some(function (nestedType) {\r\n                    return nestedType.name == type\r\n                })   } \r\n        )\r\n        this.setState({ data: newPokemonList })\r\n}\n\n    filter = (tern) => {\n        this.setState({ tern: tern });\r\n        let newPokemon = this.state.fetchedData.filter(function (item) {\n            return item.name.toLowerCase().indexOf(tern.toLowerCase()) > -1;\r\n        });\n        this.setState({ data: newPokemon });\n    }\n    returnBasicData = () => {\n        this.setState({ data: this.state.fetchedData })\r\n    }\n    componentDidMount = async () => {\n        const responce = await fetch(url)\r\n        let data = await responce.json()\r\n        let dataToState = new Array();\r\n        if (data.results.length > 0) {\r\n            for (var i = 0; i < data.results.length; i++) {\r\n                let url2 = \"https://pokeapi.co/api/v2/pokemon/\" + data.results[i].name;\r\n\r\n                let pokemonData = await fetch(url2);\r\n                let pokemonDataJson = await pokemonData.json()\r\n                let types = pokemonDataJson.types.map(function (type) {\r\n                    return {\r\n                        name: type.type.name,\r\n                        url: type.type.url\r\n                    };\r\n\r\n                });\r\n                let image = pokemonDataJson.sprites.other[\"official-artwork\"].front_default;\r\n\r\n                let objectToInsert = {\r\n                    types: types,\r\n                    name: data.results[i].name,\r\n                    defense: pokemonDataJson.stats[2].base_stat,\r\n                    image: image,\r\n                    url: url,\r\n                    weight: pokemonDataJson.weight,\r\n                    abilities: pokemonDataJson.abilities[0].ability.name,\r\n                    height: pokemonDataJson.height,\r\n                    id: pokemonDataJson.id,\r\n\r\n                };\r\n                dataToState.push(objectToInsert);\r\n            }\r\n        }\r\n\r\n\r\n        this.setState({ data: dataToState });\r\n        this.setState({ fetchedData: dataToState });\r\n\r\n    }\n\n    render() {\n        let pokemonData = this.state.data.map((data, i) => {\r\n            return (<PokemonCard key={i} {...data}\r\n                handler={this.handler}\r\n                pressType={this.pressType}\r\n            />)\r\n        })\n\n        return (\n            <Router>\n                <View style={styles.body} >\n                    <View style={styles.header}>\r\n                        <Link onClick={this.returnBasicData} style={{ textDecoration: 'none' }} to='/'><Text style={styles.text}>Pokedex</Text></Link>\r\n                        <TextInput style={styles.input}\r\n                            onChangeText={this.filter}\r\n                        />\r\n                    </View>\n                    <View style={styles.mainWindow}>\n                        <Route exact path=\"/pokedex\">\n                    <View style={styles.cardHolder}>\n                       {pokemonData}\n                        </View>\r\n                    </Route>\n                        <Route exact path=\"/\">\n                    <View style={styles.cardHolder}>\n                       {pokemonData}\n                        </View>\r\n                    </Route>\n                        <Route path={'/pokemonDescription/:id'}\n                            render={({ match }) => {\n                                const { id } = match.params\n                                let pokemon = this.state.data.find((el) => {\r\n                                    return el.id === Number(id)\r\n                                });\n                                return (\n                                    <PokemonDescription\n                                        {...pokemon} />\n                                )\n                            }} />\n                </View>\n                </View>\n               \n            </Router>\n        )\n    }\r\n}\nconst styles = StyleSheet.create(\n    {\r\n        body: {\n            backgroundColor: '#333',\r\n            height: '100%',\r\n        },\n        mainWindow: {\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n        },\n        cardHolder: {\r\n            padding: 30,\r\n            flex: 1,\r\n            backgroundColor: '#63806c',\r\n            flexDirection: \"row\",\r\n            justifyContent: 'space-around',\r\n            flexWrap: 'wrap',\r\n            margin: 50,\r\n            borderRadius: 10\r\n        },\r\n        header: {\r\n            padding: 50,\r\n            padding: 50,\r\n            flexDirection: 'row',\r\n            height: 90,\r\n            backgroundColor: '#3c4d41',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n        },\r\n        text: {\r\n            color: 'orange',\r\n            fontSize: 40,\r\n            fontWeight: 'bold'\r\n        },\r\n        input: {\r\n            backgroundColor: 'white',\r\n            width: 300,\r\n            height: 30,\r\n            borderRadius: 5\r\n        }\r\n    }\n)\nexport default App;\n\n"],"sourceRoot":""}