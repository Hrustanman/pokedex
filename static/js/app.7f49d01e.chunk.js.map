{"version":3,"sources":["src/pokemonCard.js","App.js"],"names":["PokemonCard","props","retrunClass","pokeType","styles","typepsychic","typebug","typenormal","typesteel","typeground","typeflying","typefairy","typewater","typepoison","typerock","typefighting","typedark","typeice","typefire","typelctric","typegrass","View","style","cardstyle","Image","cardstyleImage","source","uri","image","Text","pokemonName","name","types","map","type","i","marginTop","key","flexDirection","pokemontypelook","pokeTypeText","StyleSheet","create","height","width","margin","backgroundColor","alignItems","justifyContent","borderRadius","borderWidth","borderColor","textTransform","color","fontSize","textAlign","url","App","state","data","fetchedData","tern","selectedTags","filter","setState","console","log","newPokemon","item","toLowerCase","indexOf","componentDidMount","a","async","fetch","responce","json","dataToState","Array","results","length","url2","pokemonData","pokemonDataJson","sprites","other","front_default","objectToInsert","defense","stats","base_stat","weight","push","this","handler","body","header","text","TextInput","input","onChangeText","cardHolder","Component","padding","flex","flexWrap","fontWeight"],"mappings":"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","file":"static/js/app.7f49d01e.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { View, Text, StyleSheet,  Image, } from 'react-native'\r\nimport { createStyles, } from 'react-native-media-queries';\r\n\r\n//export class PokemonType extends Component {\r\n//    handleClick = () => {\r\n//        alert(this.props.name);\r\n//        console.log(this.props.name)\r\n//    }\r\n\r\n//    render() {\r\n//        return (    \r\n//   <Button title=\"Example\" onPress={this.handleClick} />\r\n// );\r\n//    }\r\n//}\r\n\r\nexport const PokemonCard = (props) => {\r\n    function retrunClass(pokeType) {\r\n        switch (pokeType) {\r\n            case 'psychic': return styles.typepsychic;\r\n            case 'bug': return styles.typebug;\r\n            case 'normal': return styles.typenormal;\r\n            case 'steel': return styles.typesteel;\r\n            case 'ground': return styles.typeground;\r\n            case 'flying': return styles.typeflying;\r\n            case 'fairy': return styles.typefairy;\r\n            case 'water': return styles.typewater;\r\n            case 'poison': return styles.typepoison;\r\n            case 'rock': return styles.typerock;\r\n            case 'fighting': return styles.typefighting;\r\n            case 'dark': return styles.typedark;\r\n            case 'ice': return styles.typeice;\r\n            case 'fire': return styles.typefire;\r\n            case 'elctric': return styles.typelctric;\r\n            case 'grass': return styles.typegrass;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <View style={styles.cardstyle}>\r\n            <View>\r\n                <Image style={styles.cardstyleImage}\r\n                    source={{ uri: props.image }} />\r\n            </View>\r\n            <Text style={styles.pokemonName}>{props.name}</Text>\r\n            {props.types && props.types.map((type, i) => (\r\n                <View style={{ marginTop: 10 }} key={i}>\r\n\r\n                    <View style={{ flexDirection: 'row', marginTop: 5 }}>\r\n                        <View style={[retrunClass(type.name), styles.pokemontypelook]}>< Text style={styles.pokeTypeText} key={i}>{type.name}</Text></View>\r\n                        </View>\r\n                </View>\r\n            ))}\r\n        </View>\r\n\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    cardstyleImage: {\r\n        height: 150,\r\n        width: 150\r\n    }\r\n    ,\r\n    cardstyle: {\r\n        margin: 10,\r\n        height: 270,\r\n        width: 270,\r\n        backgroundColor: '#3c4d41',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: 10,\r\n        borderWidth: 1,\r\n        borderColor: '#6d8a76',\r\n        textTransform: 'capitalize'\r\n    },\r\n    pokemonName: {\r\n        color: 'white',\r\n        fontSize: 30,\r\n\r\n    },\r\n    pokemontypelook: {\r\n        width: 60,\r\n        height: 20,\r\n        borderRadius: 2,\r\n    },\r\n    typepsychic: {\r\n        backgroundColor: '#F95587',\r\n    },\r\n    typebug: {\r\n        backgroundColor: '#A6B91A',\r\n    },\r\n    typenormal: {\r\n        backgroundColor: '#A8A77A',\r\n    }, typesteel: {\r\n        backgroundColor: '#B7B7CE',\r\n    }, typeground: {\r\n        backgroundColor: '#E2BF65',\r\n    }, typeflying: {\r\n        backgroundColor: '#A98FF3',\r\n    }, typefairy: {\r\n        backgroundColor: '#D685AD',\r\n    }, typewater: {\r\n        backgroundColor: '#6390F0',\r\n    }, typepoison: {\r\n        backgroundColor: '#A33EA1',\r\n    }, typerock: {\r\n        backgroundColor: '#B6A136',\r\n    }, typefighting: {\r\n        backgroundColor: '#C22E28',\r\n    }, typedark: {\r\n        backgroundColor: '#705746',\r\n    }, typeice: {\r\n        backgroundColor: '#96D9D6',\r\n    }, typefire: {\r\n        backgroundColor: '#EE8130',\r\n    }, typelctric: {\r\n        backgroundColor: '#F7D02C',\r\n\r\n    }, typegrass: {\r\n        backgroundColor: '#7AC74C',\r\n        width: 50,\r\n        height: 20,\r\n    },\r\n    pokeTypeText: {\r\n        textAlign: \"center\",\r\n    }\r\n\r\n});\r\n\r\n","\nimport React, { Component } from 'react';\nimport { StyleSheet, Text, View, TextInput,  } from 'react-native';\nimport { PokemonCard } from './src/pokemonCard.js'\n\n\n\nconst url = 'https://pokeapi.co/api/v2/pokemon?limit=20&offset=200'\nclass App extends Component {\n    state = {\n        \r\n        data: [],\r\n        fetchedData: [],\r\n        tern: '',\r\n        selectedTags: []\r\n    }\n    filter = (tern) => {\n        this.setState({ tern: tern });\n        console.log(tern); \r\n        let newPokemon = this.state.fetchedData.filter(function (item) {\n            return item.name.toLowerCase().indexOf(tern.toLowerCase()) > -1;\r\n        });\n        this.setState({ data: newPokemon });\n    }\n    componentDidMount = async () => {\n        const responce = await fetch(url)\r\n        let data = await responce.json()\r\n        let dataToState = new Array();\r\n        if (data.results.length > 0) {\r\n            for (var i = 0; i < data.results.length; i++) {\r\n                let url2 = \"https://pokeapi.co/api/v2/pokemon/\" + data.results[i].name;\r\n            \r\n               \r\n                let pokemonData = await fetch(url2);\r\n                let pokemonDataJson = await pokemonData.json()\r\n                let types = pokemonDataJson.types.map(function (type) {\r\n                    return {\r\n                        name: type.type.name,\r\n                        url: type.type.url\r\n                    };\r\n\r\n                });\r\n                let image = pokemonDataJson.sprites.other[\"official-artwork\"].front_default;\r\n               \r\n                let objectToInsert = {\r\n                    types: types, \r\n                    name: data.results[i].name,\r\n                    defense: pokemonDataJson.stats[2].base_stat,\r\n                    image: image,\r\n                    url: url,\r\n                    weight: pokemonDataJson.weight\r\n                };\r\n                dataToState.push(objectToInsert);\r\n            }\r\n            console.log(dataToState);\r\n        }\r\n       \r\n\r\n        this.setState({ data: dataToState });\r\n        this.setState({ fetchedData: dataToState });\r\n\r\n    }\n    \n    render() {\n        let pokemonData = this.state.data.map((data, i) => {\r\n            return (<PokemonCard key={i} {...data}\r\n                handler={this.handler}\r\n                />)\r\n        })\n\n        return (\n\n            <View style={styles.body} >\n                <View style={styles.header}>\r\n                    <Text style={styles.text}>Pokedox</Text>\r\n                    <TextInput style={styles.input}\r\n                        onChangeText={this.filter}\r\n                    />\r\n                </View>\n                <View style={styles.cardHolder}>\n                    {pokemonData}\n                </View>\n            </View>\n           \n        )\n    }\r\n}\nconst styles = StyleSheet.create(\n    {\r\n        body: {\n            backgroundColor: '#333'\r\n        },\n        cardHolder: {\r\n            padding: 30,\r\n            flex: 1,\r\n            backgroundColor: '#63806c',\r\n            flexDirection: \"row\",\r\n            justifyContent: 'space-around',\r\n            flexWrap: 'wrap',\r\n            margin: 50,\r\n            borderRadius: 10\r\n        },\r\n        header: {\r\n            padding: 50,\r\n            padding: 50,\r\n            flexDirection: 'row',\r\n            height: 90,\r\n            backgroundColor: '#3c4d41',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n        },\r\n        text: {\r\n            color: 'orange',\r\n            fontSize: 40,\r\n            fontWeight: 'bold'\r\n        },\r\n        input: {\r\n            backgroundColor: 'white',\r\n            width: 300,\r\n            height: 30,\r\n            borderRadius: 5\r\n        },\r\n    }\n)\nexport default App;\n\n"],"sourceRoot":""}