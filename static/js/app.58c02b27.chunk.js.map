{"version":3,"sources":["src/header.js","src/pokemonCard.js","App.js"],"names":["Cl","alert","Header","props","View","style","styles","header","Text","text","TextInput","input","defaultValue","Button","title","onPress","StyleSheet","create","flexDirection","height","backgroundColor","alignItems","justifyContent","color","fontSize","width","PokemonCard","retrunClass","pokeType","typepsychic","typebug","typenormal","typesteel","typeground","typeflying","typefairy","typewater","typepoison","typerock","typefighting","typedark","typeice","typefire","typelctric","typegrass","cliker","type","name","cardstyle","Image","cardstyleImage","source","uri","image","pokemonName","types","map","i","key","pokemontypelook","margin","url","App","state","data","componentDidMount","a","async","fetch","responce","json","dataToState","Array","results","length","url2","pokemonData","pokemonDataJson","sprites","other","front_default","objectToInsert","defense","stats","base_stat","weight","push","console","log","setState","this","body","cardHolder","Component","flex","flexWrap"],"mappings":"qTAGIA,EAAK,WACL,OAAQC,MAAM,aAELC,EAAS,SAACC,GACnB,OAAQ,kBAACC,EAAA,EAAD,CAAMC,MAAOC,EAAOC,QACxB,kBAACC,EAAA,EAAD,CAAMH,MAAOC,EAAOG,MAApB,WACA,kBAACC,EAAA,EAAD,CAAWL,MAAOC,EAAOK,MAAOC,aAAe,SAC/C,kBAACC,EAAA,EAAD,CAAQC,MAAM,iCAAQC,QAASf,MAIjCM,EAASU,IAAWC,OAAO,CAC7BV,OAAQ,CACJW,cAAe,MACfC,OAAQ,GACRC,gBAAiB,UACjBC,WAAY,SACZC,eAAgB,UAEpBb,KAAM,CACFc,MAAO,SACPC,SAAU,IAEdb,MAAO,CACHS,gBAAiB,QACjBK,MAAO,S,QCvBFC,G,MAAc,SAACvB,GAQxB,SAASwB,EAAYC,GACjB,OAAQA,GACJ,IAAK,UAAW,OAAOtB,EAAOuB,YAC9B,IAAK,MAAO,OAAOvB,EAAOwB,QAC1B,IAAK,SAAU,OAAOxB,EAAOyB,WAC7B,IAAK,QAAS,OAAOzB,EAAO0B,UAC5B,IAAK,SAAU,OAAO1B,EAAO2B,WAC7B,IAAK,SAAU,OAAO3B,EAAO4B,WAC7B,IAAK,QAAS,OAAO5B,EAAO6B,UAC5B,IAAK,QAAS,OAAO7B,EAAO8B,UAC5B,IAAK,SAAU,OAAO9B,EAAO+B,WAC7B,IAAK,OAAQ,OAAO/B,EAAOgC,SAC3B,IAAK,WAAY,OAAOhC,EAAOiC,aAC/B,IAAK,OAAQ,OAAOjC,EAAOkC,SAC3B,IAAK,MAAO,OAAOlC,EAAOmC,QAC1B,IAAK,OAAQ,OAAOnC,EAAOoC,SAC3B,IAAK,UAAW,OAAOpC,EAAOqC,WAC9B,IAAK,QAAS,OAAOrC,EAAOsC,WAGpC,IAAIC,EAAS,WACT5C,Y,GAAW6C,KAAKC,OAEpB,OACI,kBAAC3C,EAAA,EAAD,CAAMC,MAAOC,EAAO0C,WAChB,kBAAC5C,EAAA,EAAD,KACI,kBAAC6C,EAAA,EAAD,CAAO5C,MAAOC,EAAO4C,eACjBC,OAAQ,CAAEC,IAAKjD,EAAMkD,UAE7B,kBAAC7C,EAAA,EAAD,CAAMH,MAAOC,EAAOgD,aAAcnD,EAAM4C,MACvC5C,EAAMoD,OAASpD,EAAMoD,MAAMC,KAAI,SAACV,EAAMW,GAAP,OAC5B,kBAACrD,EAAA,EAAD,CAAMsD,IAAKD,GACP,kBAAEjD,EAAA,EAAF,CAAOkD,IAAKD,GAAIX,EAAKC,MACrB,kBAAC3C,EAAA,EAAD,CAAMW,QAAS8B,EAAQxC,MAAO,CAACsB,EAAYmB,EAAKC,MAAOzC,EAAOqD,mBAC9D,kBAAC9C,EAAA,EAAD,CAAQE,QAAS8B,GAAjB,kBAUdvC,EAASU,IAAWC,OAAO,CAC7BiC,eAAgB,CACZ/B,OAAQ,IACRM,MAAO,KAGXuB,UAAW,CACPY,OAAQ,GACRzC,OAAQ,IACRM,MAAO,IACPL,gBAAiB,SACjBC,WAAY,SACZC,eAAgB,UAEpBgC,YAAa,CACT/B,MAAO,QACPC,SAAU,IAEdmC,gBAAiB,CACblC,MAAO,GACPN,OAAQ,IAEZU,YAAa,CACTT,gBAAiB,WAErBU,QAAS,CACLV,gBAAiB,WAErBW,WAAY,CACRX,gBAAiB,WAClBY,UAAW,CACVZ,gBAAiB,WAClBa,WAAa,CACZb,gBAAiB,WAClBc,WAAY,CACXd,gBAAiB,WAClBe,UAAW,CACVf,gBAAiB,WAClBgB,UAAW,CACVhB,gBAAiB,WAClBiB,WAAa,CACZjB,gBAAiB,WAClBkB,SAAU,CACTlB,gBAAiB,WAClBmB,aAAc,CACbnB,gBAAiB,WAClBoB,SAAU,CACTpB,gBAAiB,WAClBqB,QAAU,CACTrB,gBAAiB,WAClBsB,SAAW,CACVtB,gBAAiB,WAClBuB,WAAY,CACXvB,gBAAiB,WAElBwB,UAAW,CACVxB,gBAAiB,UACjBK,MAAO,GACPN,OAAQ,M,0aC5GhB,IAAM0C,EAAM,wDACNC,E,kLACFC,MAAQ,CAEJC,KAAM,I,EAEVC,kBAAoB,4CAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACOE,MAAMP,IADb,cACVQ,EADU,kBAAAH,EAAA,MAECG,EAASC,QAFV,UAEZN,EAFY,OAGZO,EAAc,IAAIC,QAClBR,EAAKS,QAAQC,OAAS,GAJV,iBAKHjB,EAAI,EALD,YAKIA,EAAIO,EAAKS,QAAQC,QALrB,wBAMJC,EAAO,qCAAuCX,EAAKS,QAAQhB,GAAGV,KAN1D,YAAAmB,EAAA,MASgBE,MAAMO,IATtB,eASJC,EATI,mBAAAV,EAAA,MAUoBU,EAAYN,QAVhC,QAUJO,EAVI,OAWJtB,EAAQsB,EAAgBtB,MAAMC,KAAI,SAAUV,GAC5C,MAAO,CACHC,KAAMD,EAAKA,KAAKC,KAChBc,IAAKf,EAAKA,KAAKe,QAInBR,EAAQwB,EAAgBC,QAAQC,MAAM,oBAAoBC,cAE1DC,EAAiB,CACjB1B,MAAOA,EACPR,KAAMiB,EAAKS,QAAQhB,GAAGV,KACtBmC,QAASL,EAAgBM,MAAM,GAAGC,UAClC/B,MAAOA,EACPQ,IAAKA,EACLwB,OAAQR,EAAgBQ,QAE5Bd,EAAYe,KAAKL,GA5BT,QAK6BxB,IAL7B,uBA8BZ8B,QAAQC,IAAIjB,GA9BA,QAkChB,EAAKkB,SAAS,CAAEzB,KAAMO,IAlCN,8D,+CAuChB,IAAIK,EAAcc,KAAK3B,MAAMC,KAAKR,KAAI,SAACQ,EAAMP,GACzC,OAAQ,kBAAC,EAAD,KAAaC,IAAKD,GAAOO,OAIrC,OACI,kBAAC5D,EAAA,EAAD,CAAMC,MAAOC,EAAOqF,MAChB,kBAAC,EAAD,MACA,kBAACvF,EAAA,EAAD,CAAMC,MAAOC,EAAOsF,YACfhB,Q,GArDHiB,aA2DZvF,EAASU,IAAWC,OACtB,CACI0E,KAAM,CACFvE,gBAAiB,QAErBwE,WAAY,CACRE,KAAM,EACN1E,gBAAiB,UACjBF,cAAe,MACfI,eAAgB,eAChByE,SAAU,OACVnC,OAAQ,MAILE,Q","file":"static/js/app.58c02b27.chunk.js","sourcesContent":["import React from 'react'\r\nimport { View, Text, StyleSheet, TextInput, Button } from 'react-native'\r\n\r\nlet Cl = () => {\r\n    return (alert('Non Stop'))\r\n}\r\nexport const Header = (props) => {\r\n    return (<View style={styles.header}>\r\n        <Text style={styles.text}  >POKEDOX</Text>\r\n        <TextInput style={styles.input} defaultValue = 'poke' />\r\n        <Button title='Пошук' onPress={Cl} />\r\n    </View>)\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    header: {\r\n        flexDirection: 'row',\r\n        height: 90,\r\n        backgroundColor: '#931c1c',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    text: { \r\n        color: 'orange',\r\n        fontSize: 20\r\n    },\r\n    input: {\r\n        backgroundColor: 'white',\r\n        width: '30%'\r\n    },\r\n\r\n});","import React, { Component } from 'react'\r\nimport { View, Text, StyleSheet, TextInput, Button, Image,maxHeight  } from 'react-native'\r\nimport { createStyles, } from 'react-native-media-queries';\r\n\r\n\r\nexport const PokemonCard = (props) => {\r\n \r\n    //function retrunClass(pokeType) {\r\n    //    if (pokeType == 'psychic')\r\n    //        return styles.typepsychic\r\n    //    else\r\n    //        return styles.defaultType\r\n    //}\r\n    function retrunClass(pokeType) {\r\n        switch (pokeType) {\r\n            case 'psychic': return styles.typepsychic;\r\n            case 'bug': return styles.typebug;\r\n            case 'normal': return styles.typenormal;\r\n            case 'steel': return styles.typesteel;\r\n            case 'ground': return styles.typeground;\r\n            case 'flying': return styles.typeflying;\r\n            case 'fairy': return styles.typefairy;\r\n            case 'water': return styles.typewater;\r\n            case 'poison': return styles.typepoison;\r\n            case 'rock': return styles.typerock;\r\n            case 'fighting': return styles.typefighting;\r\n            case 'dark': return styles.typedark;\r\n            case 'ice': return styles.typeice;\r\n            case 'fire': return styles.typefire;\r\n            case 'elctric': return styles.typelctric;\r\n            case 'grass': return styles.typegrass;\r\n        }\r\n    }\r\n    let cliker = () => {\r\n        alert(this.type.name)\r\n    }\r\n    return (\r\n        <View style={styles.cardstyle}>\r\n            <View>\r\n                <Image style={styles.cardstyleImage}\r\n                    source={{ uri: props.image }} />\r\n            </View>\r\n            <Text style={styles.pokemonName}>{props.name}</Text>\r\n            {props.types && props.types.map((type, i) => (\r\n                <View key={i}>\r\n                    < Text key={i}>{type.name}</Text>\r\n                    <View onPress={cliker} style={[retrunClass(type.name), styles.pokemontypelook]}></View>\r\n                    <Button onPress={cliker}> Cliker</Button>\r\n                </View>\r\n            ))}\r\n\r\n\r\n        </View>\r\n\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    cardstyleImage: {\r\n        height: 150,\r\n        width: 150\r\n    }\r\n    ,\r\n    cardstyle: {\r\n        margin: 10,\r\n        height: 300,\r\n        width: 300,\r\n        backgroundColor: 'orange',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    pokemonName: {\r\n        color: 'white',\r\n        fontSize: 30\r\n    },\r\n    pokemontypelook: {\r\n        width: 50,\r\n        height: 20,   \r\n    },\r\n    typepsychic: {\r\n        backgroundColor: '#F95587',\r\n    },\r\n    typebug: {\r\n        backgroundColor: '#A6B91A',\r\n    },\r\n    typenormal: {\r\n        backgroundColor: '#A8A77A',\r\n    }, typesteel: {\r\n        backgroundColor: '#B7B7CE',\r\n    }, typeground : {\r\n        backgroundColor: '#E2BF65',\r\n    }, typeflying: {\r\n        backgroundColor: '#A98FF3',\r\n    }, typefairy: {\r\n        backgroundColor: '#D685AD',\r\n    }, typewater: {\r\n        backgroundColor: '#6390F0',\r\n    }, typepoison : {\r\n        backgroundColor: '#A33EA1',\r\n    }, typerock: {\r\n        backgroundColor: '#B6A136',\r\n    }, typefighting: {\r\n        backgroundColor: '#C22E28',\r\n    }, typedark: {\r\n        backgroundColor: '#705746',\r\n    }, typeice : {\r\n        backgroundColor: '#96D9D6',\r\n    }, typefire : {\r\n        backgroundColor: '#EE8130',\r\n    }, typelctric: {\r\n        backgroundColor: '#F7D02C',\r\n      \r\n    }, typegrass: {\r\n        backgroundColor: '#7AC74C',\r\n        width: 50,\r\n        height: 20,\r\n    }\r\n});\r\n\r\n","import { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport { StyleSheet, Text, View, ActivityIndicator } from 'react-native';\nimport { Header } from './src/header.js';\nimport { PokemonCard } from './src/pokemonCard.js'\nimport { createStyles, maxHeight } from 'react-native-media-queries';\n\nconst url = 'https://pokeapi.co/api/v2/pokemon?limit=20&offset=200'\nclass App extends Component {\n    state = {\n        \r\n        data: []\r\n    }\n    componentDidMount = async () => {\n        const responce = await fetch(url)\r\n        let data = await responce.json()\r\n        let dataToState = new Array();\r\n        if (data.results.length > 0) {\r\n            for (var i = 0; i < data.results.length; i++) {\r\n                let url2 = \"https://pokeapi.co/api/v2/pokemon/\" + data.results[i].name;\r\n            \r\n               \r\n                let pokemonData = await fetch(url2);\r\n                let pokemonDataJson = await pokemonData.json()\r\n                let types = pokemonDataJson.types.map(function (type) {\r\n                    return {\r\n                        name: type.type.name,\r\n                        url: type.type.url\r\n                    };\r\n\r\n                });\r\n                let image = pokemonDataJson.sprites.other[\"official-artwork\"].front_default;\r\n               \r\n                let objectToInsert = {\r\n                    types: types, \r\n                    name: data.results[i].name,\r\n                    defense: pokemonDataJson.stats[2].base_stat,\r\n                    image: image,\r\n                    url: url,\r\n                    weight: pokemonDataJson.weight\r\n                };\r\n                dataToState.push(objectToInsert);\r\n            }\r\n            console.log(dataToState);\r\n        }\r\n       \r\n\r\n        this.setState({ data: dataToState })\r\n\r\n    }\n\n    render() {\n        let pokemonData = this.state.data.map((data, i) => {\r\n            return (<PokemonCard key={i} {...data}\r\n                />)\r\n        })\n\n        return (\n            <View style={styles.body} >\n                <Header />\n                <View style={styles.cardHolder}>\n                    {pokemonData}\n                </View>\n            </View>\n        )\n    }\r\n}\nconst styles = StyleSheet.create(\n    {\r\n        body: {\n            backgroundColor: '#333'\r\n        },\n        cardHolder: {\r\n            flex: 1,\r\n            backgroundColor: '#181818',\r\n            flexDirection: \"row\",\r\n            justifyContent: 'space-around',\r\n            flexWrap: 'wrap',\r\n            margin: 50\r\n        },\r\n    }\n)\nexport default App;\n\n"],"sourceRoot":""}